syntax = "proto3";
package ir.uid.base;
option java_multiple_files = true;
option java_package = "ir.uid.base";
import "validate/validate.proto";
import "ir/uid/base/base.proto";
import "ir/uid/internal/ai/ai_liveness.proto";
import "ir/uid/internal/ai/ai_facematching.proto";
import "ir/uid/base/security.proto";
import "ir/uid/external/base/user.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
enum OperatorRole{
  OPERATOR_ROLE_UNDEFINED = 0;
  OPERATOR_ROLE_CALL_CENTER = 1;
  OPERATOR_ROLE_BUSINESS = 2;
}

message RegisterOperatorRequest{
  ir.uid.base.RequestContext requestContext = 1;
  string projectId = 2;
  string userName = 3;
  //ir.uid.base.SecretContainer userName = 3;
  string password = 4;
  //ir.uid.base.SecretContainer password = 4;
  string businessId = 5;
  OperatorRole role = 6;
}

message RegisterOperatorResponse{
  ir.uid.base.ResponseContext responseContext = 1;
  string operatorId = 2;
}


message BusinessSecretInformation{
  string businessToken = 1;
}

message BusinessBasicInformation{
  /* is generated by the server*/
  string id = 1;
  string name = 2;
  string address = 3;
  string supportEmail = 4;
  string supportPersonName = 5;
  string supportPhoneNumber = 6;
  string phoneNumber = 7;
  string postalCode = 8;
  string productName = 9;
  google.protobuf.StringValue parentBusinessId = 10;
  //only returns by the server
  repeated FlowConfig workflows = 12;
}

message FlowDefinitionDetail{
  google.protobuf.UInt64Value id = 1;
  google.protobuf.StringValue name = 2;
  string description = 3;
}


message AuthAPIConfig{
  string callbackURL = 1;
}

message ConfigDetailData{
  google.protobuf.UInt64Value id = 1;
  ConfigKey key = 2;
  repeated string value = 3;
}

message ConfigKey{
  google.protobuf.UInt64Value id = 1;
  string key = 2;
}

message FlowConfig{
  google.protobuf.UInt64Value id = 1;
  google.protobuf.UInt32Value accessLevel = 2;
  google.protobuf.StringValue businessId = 3;
  google.protobuf.BoolValue isActive = 4;
  FlowDefinitionDetail flowDefinitionDetail = 5;
  repeated ConfigDetailData configDetailData = 6;
}

message BusinessGeneralInformation{
  BusinessBasicInformation basicInformation = 1;
  BusinessSecretInformation secretInformation = 2;
  repeated BusinessGeneralInformation associatedBusiness = 3;
}

message RegisterBusinessRequest{
  ir.uid.base.RequestContext requestContext = 1;
  BusinessBasicInformation businessInformation = 2;
}

message RegisterBusinessResponse{
  ir.uid.base.ResponseContext responseContext = 1;
  BusinessGeneralInformation businessInformation = 2;
}

message GetAvailableWorkFlowsRequest{
  ir.uid.base.RequestContext requestContext = 1;
}

message GetAvailableWorkFlowsResponse{
  ir.uid.base.ResponseContext responseContext = 1;
  repeated FlowDefinitionDetail definitionsDetail = 2 ;
}

message GetAvailableConfigKeyRequest{
  ir.uid.base.RequestContext requestContext = 1;
}

message GetAvailableConfigKeyResponse{
  ir.uid.base.ResponseContext responseContext = 1;
  repeated ConfigKey configKeys = 2 ;
}

message GetBusinessListRequest {
  ir.uid.base.RequestContext requestContext = 1;
  google.protobuf.StringValue parentBusinessId = 2;
  bool includeAssociatedBusiness = 3;
}

message GetBusinessListResponse {
  ir.uid.base.ResponseContext responseContext = 1;
  repeated BusinessGeneralInformation business = 2;
}

message UpdateBusinessInformationRequest{
  ir.uid.base.RequestContext requestContext = 1;
  BusinessBasicInformation businessInformation = 2;
}


message UpdateBusinessInformationResponse{
  ir.uid.base.ResponseContext responseContext = 1;
  BusinessGeneralInformation businessInformation = 2;
}

enum PanelResponse{
  PANEL_RESPONSE_UNDEFINED = 0;
  PANEL_RESPONSE_ACCEPTED = 1;
  PANEL_RESPONSE_REJECTED = 2;
}

enum PanelReason{
  // در حال انتظار
  PANEL_REASON_UNDEFINED = 0;
  //تایید شده
  PANEL_REASON_ACCEPT = 1;
  // عدم تطبیق چهره با ثبت احوال
  PANEL_REASON_REJECT_FACE_NOT_MATCH_ID =2;
  // زنده نبودن ویدئو ارسالی
  PANEL_REASON_REJECT_VIDEO_NOT_LIVE = 3;
  // نور نامناسب
  PANEL_REASON_REJECT_VIDEO_BAD_LIGHT = 4;
  // عدم وضوح تصویر
  PANEL_REASON_REJECT_VIDEO_BAD_QUALITY = 5;
  // فاصله بیش از حد با دوربین
  PANEL_REASON_REJECT_PERSON_TOO_FAR_AWAY = 6;
  // وجود چند چهره
  PANEL_REASON_REJECT_MORE_THAN_ONE_PERSON = 7;
  // عدم وجود چهره
  PANEL_REASON_REJECT_NO_PERSON_DETECTED = 8;
}

//enum PanelReason {
//  PANEL_REASON_UNDEFINED = 0;
//  PANEL_REASON_ACCEPT_OK = 1;
//  PANEL_REASON_ACCEPT_LACK_OF_IMAGE_RESOLUTION = 2;
//  PANEL_REASON_ACCEPT_INVALID_SIGNATURE = 3;
//  PANEL_REASON_ACCEPT_INCOMPATIBLE_CAMERA_LOOK = 4;
//  PANEL_REASON_ACCEPT_INCOMPATIBLE_LIGHT_VIDEO = 5;
//  PANEL_REASON_ACCEPT_INCOMPATIBLE_HEJAB = 6;
//  PANEL_REASON_ACCEPT_INCOMPATIBLE_BACKGROUND = 7;
//  PANEL_REASON_ACCEPT_INCOMPATIBLE_CAMERA_ANGLE = 8;
//  PANEL_REASON_REJECT_FACE_DO_NOT_MATCH = 9;
//  PANEL_REASON_REJECT_FAKE_VIDEO = 10;
//  PANEL_REASON_REJECT_FAR_FACE = 11;
//  PANEL_REASON_REJECT_LACK_OF_IMAGE_RESOLUTION = 12;
//  PANEL_REASON_REJECT_MANY_FACES = 13;
//  PANEL_REASON_REJECT_NO_FACE = 14;
//}


enum PersonType {
  PERSON_TYPE_UNDEFINED=0;
  PERSON_TYPE_ACCEPTED = 1;
  PERSON_TYPE_REJECTED = 2;
  PERSON_TYPE_INCOMPLETE_INFORMATION = 3;
}


//enum PersonTypeReason{
//    PERSON_TYPE_REASON_UNDEFINED = 0;
//    PERSON_TYPE_REASON_NO_UPLOAD_ATTEMPT = 1;
//    PERSON_TYPE_REASON_FAILED_UPLOAD = 2;
//    PERSON_TYPE_REASON_UNDEFINED = 0;
//}
enum PanelRole {
  PANEL_ROLE_UNDEFINED = 0;
  PANEL_ROLE_CALL_CENTER = 1;
  PANEL_ROLE_BUSINESS = 2;
}




message PanelLoginRequest {
  ir.uid.base.RequestContext requestContext = 1;
  base.Credential credential = 2;
}


message PanelLoginResponse {
  ir.uid.base.ResponseContext responseContext = 1;
  string token = 2;
  PanelRole role = 3;
}


message GetUserByNationalIdRequest {
  ir.uid.base.RequestContext requestContext = 1;
  UserSearchInfo userSearchInfo=2;
  ir.uid.base.Page page = 3;
}

message GetUserByNationalIdResponse {
  ir.uid.base.ResponseContext responseContext = 1;
  repeated Person people = 2;
  ir.uid.base.Page page = 3;
}

message GetWaitingListRequest {
  ir.uid.base.RequestContext requestContext = 1;
  ir.uid.base.Page page = 2;
}


message GetWaitingListResponse {
  ir.uid.base.ResponseContext responseContext = 1;
  repeated Person people = 2;
  ir.uid.base.Page page = 3;
}


message GetAuthenticatedListRequest {
  ir.uid.base.RequestContext requestContext = 1;
  ir.uid.base.Page page = 2;
}


message GetAuthenticatedListResponse {
  ir.uid.base.ResponseContext responseContext = 1;
  repeated Person people = 2;
  ir.uid.base.Page page = 3;
}


message GetRejectedListRequest {
  ir.uid.base.RequestContext requestContext = 1;
  ir.uid.base.Page page = 2;
}

message GetIncompleteListRequest {
  ir.uid.base.RequestContext requestContext = 1;
  ir.uid.base.Page page = 2;
}

message GetIncompleteListResponse{
  ir.uid.base.ResponseContext responseContext = 1;
  repeated Person people = 2;
  ir.uid.base.Page page = 3;
}


message GetRejectedListResponse {
  ir.uid.base.ResponseContext responseContext = 1;
  repeated Person people = 2;
  ir.uid.base.Page page = 3;
}


message SetPersonPanelResponseRequest {
  ir.uid.base.RequestContext requestContext = 1;
  Person person = 2;
}

message SetPersonPanelResponseResponse {
  ir.uid.base.ResponseContext responseContext = 1;
}

message ForcePersonPanelResponseRequest {
  ir.uid.base.RequestContext requestContext = 1;
  Person person = 2;
}

message ForcePersonPanelResponseResponse {
  ir.uid.base.ResponseContext responseContext = 1;
}
message UserSearchInfo{
  string userId=1;
  string nationalId=2;
}
message UserFinalResultRequest {
  ir.uid.base.RequestContext requestContext = 1;
  UserSearchInfo userSearchInfo = 2;
}

message UserFinalResultResponse {
  ir.uid.base.ResponseContext responseContext = 1;
    UserFinalResult userFinalResult = 2;
}



message ExtraInfo {
  string nationalId = 1;
  string nationalSerialId = 2;
}

enum StepStatus{
  STEP_STATUS_UNDEFINED=0;
  STEP_STATUS_PASSED=1;
  STEP_STATUS_FAILED=2;
}

// an object representing how the flow steps user take during their authentication
message FlowStep{
  google.protobuf.Timestamp time = 1;
  string stepName = 2;
  StepStatus stepStatus = 3;
  google.protobuf.StringValue stepMessage = 4;
}

message AuthenticationStatus {
  ir.uid.internal.ai.LivenessStatus livenessStatus = 1;
  ir.uid.internal.ai.LivenessFailureReason livenessFailureReason = 2;
  ir.uid.internal.ai.FaceMatchingResponse faceMatchingStatus = 3;
  ir.uid.internal.ai.FaceMatchingFailureReason faceMatchingFailureReason = 4;
  PanelResponse panelResponse = 5;
  PanelReason  panelResponseReason = 6;
  repeated FlowStep flowSteps = 7;
}
/* All the relevant information regarding the */
message Person {
  /* Person Id which corresponds with database entry */
  string id = 1;
  /* Liveness video corresponding to the current user */
  string videoLink = 2;
  /* Selected image from liveness video */
  string livenessLink = 3;
  /* National Registry image id */
  string idImageLink = 4;
  UserInformation extraInfo = 5;
  AuthenticationStatus authenticationStatus = 6;
  PersonType type=7;
}

message UserFinalResult {
  ir.uid.internal.ai.LivenessStatus livenessStatus = 1;
  ir.uid.internal.ai.LivenessFailureReason livenessFailureReason = 2;
  ir.uid.internal.ai.FaceMatchingResponse faceMatchingStatus = 3;
  ir.uid.internal.ai.FaceMatchingFailureReason faceMatchingFailureReason = 4;
  PanelResponse panelResponse = 5;
  PanelReason  panelResponseReason = 6;
  string lastStep = 7;
  string errorMessage = 8;
  string userId = 9;
  string createdAt = 10;
  string updatedAt = 11;
}
